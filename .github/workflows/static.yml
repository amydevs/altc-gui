# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    env:
      CARGO_INSTALLS: |
        trunk
        wasm-bindgen-cli
        wasm-opt
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Set up cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: web-cargo-${{ hashFiles('**/Cargo.lock') }}
          save-always: true
      - name: Set up cargo install cache
        uses: actions/cache@v4
        with:
          path: installs
          key: |
            web-cargo-installs
            ${{ env.CARGO_INSTALLS }}
          save-always: true
      - name: Install cargo dependencies
        run: |
          while IFS= read -r package; do
            if [ "$package" != "" ]; then 
              cargo install "$package" --target-dir "installs/$package" || true
            fi;
          done <<< "$CARGO_INSTALLS"
      - name: Install wasm32-unknown-unknown Toolchain
        run: rustup target add wasm32-unknown-unknown
      - name: Build
        run: trunk build --release --public-url /altc-gui/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: 'dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
